type User {
  """ UUID identifier """
  id: ID! 
  username: String! 
  """ Hash of password """
  password: String 
  createdAt: String! 
  articles: [Article!]!
  comments(topLevelOnly: Boolean): [Comment!]!
}

type Jwt {
  userId: ID!
  token: String!
}

type Query {
  getUsers(limit: Int): [User!]!
  getUser(userId: ID!): User!
}

type Mutation {
  createUser(username: String!, password: String!): User!
  """ Login with username/password, return JWT token """
  login(username: String!, password: String!): Jwt!
}